---

- name: Set fact for base command
  set_fact:
    generate_cert_command: "{{ step_cli_install_dir }}/{{ step_cli_executable }} certificate create {{ primary_cn }}"

- name: Set fact for CLI options - File Paths, key does not exist
  when: key_stat.stat.exists == false
  block:
    - name: Add to the CLI options - File Paths, key does not exist
      set_fact:
        generate_cert_command: "{{ generate_cert_command }} {{ live_cert_basepath }}/cert.pem {{ live_cert_basepath }}/key.pem"

    - name: Set fact for CLI options - kty, default RSA
      set_fact:
        generate_cert_command: "{{ generate_cert_command }} --kty={{ certificate.kty | default('RSA') }}"

- name: Set fact for CLI options - File Paths, key exists
  when: key_stat.stat.exists == true
  set_fact:
    generate_cert_command: "{{ generate_cert_command }} {{ live_cert_basepath }}/cert.pem --key {{ live_cert_basepath }}/key.pem"

- name: Add the SANs to the CLI options
  set_fact:
    generate_cert_command: "{{ generate_cert_command }} {{ cli_sans }}"

- name: Set fact for CLI options - Size, default 4096
  set_fact:
    generate_cert_command: "{{ generate_cert_command }} --size={{ certificate.size | default('4096') }}"

- name: Set fact for CLI options - NotBefore, default -1h
  set_fact:
    generate_cert_command: "{{ generate_cert_command }} --not-before={{ certificate.not_before | default('-1') }}h"

- name: Set fact for CLI options - NotAfter, default 2160 (90 days)
  set_fact:
    generate_cert_command: "{{ generate_cert_command }} --not-after={{ certificate.valid_hours | default('2160') }}h"

- name: Set fact for CLI options - Profile
  set_fact:
    generate_cert_command: "{{ generate_cert_command }} --profile {{ certificate.profile }}"
  when: certificate.profile is defined

- name: Set fact for CLI options - Template file
  set_fact:
    generate_cert_command: "{{ generate_cert_command }} --template {{ certificate.template }}"
  when: certificate.template is defined

- name: Set fact for CLI options - Bundle
  set_fact:
    generate_cert_command: "{{ generate_cert_command }} --bundle"
  when: certificate.bundle is defined and certificate.bundle|bool

- name: Set fact for CLI options - No Password
  set_fact:
    generate_cert_command: "{{ generate_cert_command }} --no-password"
  when: certificate.no_password is defined and certificate.no_password|bool

- name: Set fact for CLI options - Insecure
  set_fact:
    generate_cert_command: "{{ generate_cert_command }} --insecure"
  when: certificate.insecure is defined and certificate.insecure|bool
